//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BmLauncherWForm.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("BmLauncherWForm.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [BmGame.R3rdPersonCamera]
        ///EnableCameraAssist=True
        ///
        ///[IniVersion]
        ///0=1577365085.000000
        ///
        ///.
        /// </summary>
        internal static string BmCamera {
            get {
                return ResourceManager.GetString("BmCamera", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [AppCompat]
        ///CPUScore1=1000
        ///CPUScore2=720
        ///CPUScore3=630
        ///CPUScore4=500
        ///CPUScore5=275
        ///CPUSpeed1=1.8
        ///CPUSpeed2=2.4
        ///CPUSpeed3=3.0
        ///CPUSpeed4=3.5
        ///CPUSpeed5=4.0
        ///CPUMultiCoreMult=1.75
        ///CPUHyperThreadMult=1.15
        ///CPUMemory1=0.5
        ///CPUMemory2=1.0
        ///CPUMemory3=1.0
        ///CPUMemory4=2.0
        ///CPUMemory5=3.0
        ///GPUmemory1=128
        ///GPUmemory2=128
        ///GPUmemory3=256
        ///GPUmemory4=512
        ///GPUmemory5=768
        ///GPUShader1=2
        ///GPUShader2=2
        ///GPUShader3=2
        ///GPUShader4=3
        ///GPUShader5=3
        ///
        ///[AppCompatGPU-0x10DE]
        ///VendorName=NVIDIA
        ///VendorMobileTag=Go
        ///0x014F [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string BmCompat {
            get {
                return ResourceManager.GetString("BmCompat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [AnimSetViewer]
        ///CheckSingleInfluenceLOD=True
        ///
        ///[UnrealEd.KismetBindings]
        ///Bindings=(Key=&quot;O&quot;,SeqObjClassName=&quot;Engine.SeqVar_Object&quot;)
        ///Bindings=(Key=&quot;S&quot;,SeqObjClassName=&quot;Engine.SeqAct_PlaySound&quot;)
        ///Bindings=(Key=&quot;P&quot;,SeqObjClassName=&quot;Engine.SeqVar_Player&quot;)
        ///Bindings=(Key=&quot;I&quot;,SeqObjClassName=&quot;Engine.SeqVar_Int&quot;)
        ///Bindings=(Key=&quot;I&quot;,bControl=true,SeqObjClassName=&quot;Engine.SeqCond_CompareInt&quot;)
        ///Bindings=(Key=&quot;F&quot;,SeqObjClassName=&quot;Engine.SeqVar_Float&quot;)
        ///Bindings=(Key=&quot;F&quot;,bControl=true,SeqObjClassName=&quot;Engine.SeqCond_ [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string BmEditor {
            get {
                return ResourceManager.GetString("BmEditor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Editor.EditorUserSettings]
        ///AllowFlightCameraToRemapKeys=True
        ///PreviewThumbnailBackgroundColor=(R=0,G=0,B=0)
        ///PreviewThumbnailTranslucentMaterialBackgroundColor=(R=127,G=127,B=127)
        ///bAutoSaveEnable=True
        ///AutoSaveTimeMinutes=10
        ///
        ///[WindowPosManager]
        ///DlgAddSpecial=879,571,328,226,0
        ///DlgActorSearch=379,262,881,507,0
        ///DlgActorFactory=783,544,553,311,0
        ///DlgBuildProgress=560,475,806,180,0
        ///SurfaceProperties=647,491,514,477,0
        ///DockingContainer=64,33,940,1076,0
        ///FloatingFrame_DockingContainer=64,33,940,1076,0
        ///Dl [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string BmEditorUserSettings {
            get {
                return ResourceManager.GetString("BmEditorUserSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [URL]
        ///Protocol=unreal
        ///Name=Player
        ///Map=Boot.umap
        ///LocalMap=Boot.umap
        ///TransitionMap=Entry
        ///MapExt=umap
        ///EXEName=BmGame.exe
        ///DebugEXEName=DEBUG-BmGame.exe
        ///SaveExt=usa
        ///Port=7777
        ///GameName=Batman
        ///GameNameShort=Bm
        ///
        ///[Engine.Engine]
        ///NetworkDevice=IpDrv.TcpNetDriver
        ///ConsoleClassName=Engine.Console
        ///GameViewportClientClassName=BmGame.RGFxGameViewportClient
        ///LocalPlayerClassName=Engine.LocalPlayer
        ///DataStoreClientClassName=Engine.DataStoreClient
        ///StorageDeviceManagerClassName=Engine.StorageDeviceManager
        ///La [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string BmEngine {
            get {
                return ResourceManager.GetString("BmEngine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Engine.GameInfo]
        ///DefaultGame=BmGame.RGameInfo
        ///DefaultServerGame=BmGame.RGameInfo
        ///bAdminCanPause=false
        ///MaxPlayers=1
        ///GameDifficulty=+1.0
        ///bChangeLevels=True
        ///MaxSpectators=0
        ///MaxIdleTime=+0.0
        ///MaxTimeMargin=+0.0
        ///TimeMarginSlack=+1.35
        ///MinTimeMargin=-1.0
        ///TotalNetBandwidth=32000
        ///MaxDynamicBandwidth=7000
        ///MinDynamicBandwidth=4000
        ///
        ///[Engine.AccessControl]
        ///IPPolicies=ACCEPT;*
        ///
        ///[Engine.GameReplicationInfo]
        ///ServerName=Another Server
        ///ShortName=Server
        ///MessageOfTheDay=
        ///
        ///[DefaultPlayer]
        ///Name=Player
        ///t [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string BmGame {
            get {
                return ResourceManager.GetString("BmGame", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Engine.PlayerInput]
        ///MoveForwardSpeed=1200
        ///MoveStrafeSpeed=1200
        ///LookRightScale=375
        ///LookUpScale=-300
        ///MouseSensitivity=30.0
        ///DoubleClickTime=0.250000
        ///bEnableMouseSmoothing=true
        ///Bindings=(Name=&quot;Fire&quot;,Command=&quot;Button bFire | StartFire | OnRelease StopFire&quot;)
        ///Bindings=(Name=&quot;AltFire&quot;,Command=&quot;StartAltFire | OnRelease StopAltFire&quot;)
        ///Bindings=(Name=&quot;MoveForward&quot;,Command=&quot;Axis aBaseY Speed=1.0&quot;)
        ///Bindings=(Name=&quot;MoveBackward&quot;,Command=&quot;Axis aBaseY Speed=-1.0&quot;)
        ///Bindings=(Name=&quot;TurnLeft&quot;,Command=&quot;Axis aBaseX S [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string BmInput {
            get {
                return ResourceManager.GetString("BmInput", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Engine.UIInteraction]
        ///UISkinName=DefaultUISkin.DefaultSkin
        ///UIJoystickDeadZone=0.9
        ///UIAxisMultiplier=1.0
        ///AxisRepeatDelay=0.2
        ///MouseButtonRepeatDelay=0.15
        ///DoubleClickTriggerSeconds=0.5
        ///DoubleClickPixelTolerance=1
        ///ToolTipInitialDelaySeconds=0.25
        ///ToolTipExpirationSeconds=5.0
        ///UISoundCueNames=GenericError
        ///UISoundCueNames=MouseEnter
        ///UISoundCueNames=MouseExit
        ///UISoundCueNames=Clicked
        ///UISoundCueNames=Focused
        ///UISoundCueNames=SceneOpened
        ///UISoundCueNames=SceneClosed
        ///UISoundCueNames=ListSubmit
        ///UISoundCue [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string BmUI {
            get {
                return ResourceManager.GetString("BmUI", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
        /// </summary>
        internal static System.Drawing.Icon favicon {
            get {
                object obj = ResourceManager.GetObject("favicon", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap LauncherStart1 {
            get {
                object obj = ResourceManager.GetObject("LauncherStart1", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] NvAPIWrapper {
            get {
                object obj = ResourceManager.GetObject("NvAPIWrapper", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] NVSetter {
            get {
                object obj = ResourceManager.GetObject("NVSetter", resourceCulture);
                return ((byte[])(obj));
            }
        }

        public static byte[] getNVSetter()
        {
            return NVSetter;
        }

        /// <summary>
        ///   Looks up a localized string similar to [Configuration]
        ///BasedOn=..\BmGame\Config\DefaultEngine.ini
        ///
        ///[SystemSettings]
        ///Fullscreen=True
        ///UseVsync=False
        ///AllowD3D10=True
        ///ResX=1
        ///ResY=1
        ///EffectsLevel=3
        ///MaxMultisamples=1
        ///DynamicLights=True
        ///DepthOfField=True
        ///LensFlares=True
        ///Bloom=True
        ///DynamicShadows=True
        ///MotionBlur=False
        ///Distortion=True
        ///FogVolumes=True
        ///DisableSphericalHarmonicLights=False
        ///AmbientOcclusion=True
        ///DetailMode=2
        ///MaxShadowResolution=1024
        ///Stereo=False
        ///IniVersion=5.8
        ///
        ///[Engine.Engine]
        ///bOnScreenKismetWarnings=FALSE
        ///bSubtitl [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string UserEngine {
            get {
                return ResourceManager.GetString("UserEngine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Configuration]
        ///BasedOn=..\BmGame\Config\DefaultGame.ini
        ///
        ///[BmGame.RPlayerController]
        ///!CI_KeyboardMap=&quot;&quot;
        ///CI_KeyboardMap=&quot;&quot;		;CI_None
        ///.CI_KeyboardMap=&quot;Space&quot;			;CI_Interact
        ///.CI_KeyboardMap=&quot;_MMB&quot;			;CI_B
        ///.CI_KeyboardMap=&quot;_LMB&quot;			;CI_X
        ///.CI_KeyboardMap=&quot;_RMB&quot;			;CI_Y
        ///.CI_KeyboardMap=&quot;X&quot;			;CI_VisionModes
        ///.CI_KeyboardMap=&quot;_RMB&quot;			;CI_AimGadget
        ///.CI_KeyboardMap=&quot;_LMB&quot;			;CI_UseGadget
        ///.CI_KeyboardMap=&quot;F&quot;			;CI_UseGrapple
        ///.CI_KeyboardMap=&quot;&quot;		;CI_UseScanner
        ///.CI_KeyboardMap=&quot;Tab&quot;		;CI_Map
        ///.CI_KeyboardM [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string UserGame {
            get {
                return ResourceManager.GetString("UserGame", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Configuration]
        ///BasedOn=..\BmGame\Config\DefaultInput.ini
        ///
        ///[Engine.PlayerInput]
        ///IniVersion=5.8
        ///.Bindings=(Name=&quot;W&quot;,Command=&quot;MoveForward | DebugMenuUpPressed | OnRelease DebugMenuUpReleased | Axis aRawLHJoyUp Speed=1.0&quot;, Shift=false, Control=false, Alt=false, bIgnoreShift=false, bIgnoreCtrl=false, bIgnoreAlt=false):META:COM_FORWARD,0,-1,-1,&quot;&quot;,false,false,CI_Movement,CI_LeftStick,CI_LeftStickUp
        ///.Bindings=(Name=&quot;S&quot;,Command=&quot;MoveBackward | DebugMenuDownPressed | OnRelease DebugMenuDownReleased | Axis aRaw [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string UserInput {
            get {
                return ResourceManager.GetString("UserInput", resourceCulture);
            }
        }
    }
}
